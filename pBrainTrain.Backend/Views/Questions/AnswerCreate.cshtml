@model pBrainTrain.Backend.Models.AnswerView
@{
    ViewBag.Title = "Create";
}

 
<br /><br /><br />
@using (Html.BeginForm("AnswerCreate", "Questions", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.HiddenFor(model => model.QuestionId)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsTheAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsTheAnswer)
                            @Html.ValidationMessageFor(model => model.IsTheAnswer, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @*images are the main reazon for the creation of viewClass (UserView in this case), because normally the other field we can store it in database, but files is not necesary to be store in it*@
                    @Html.LabelFor(model => model.ImageFile, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <div class="file-input-new">
                            <div class="input-group" style="width:280px">
                                <div tabindex="500" class="form-control file-caption">
                                    <div class="file-caption-name" id="NombreArchivo">
                                    </div>
                                </div>
                                <div class="input-group-btn" style="height:auto">
                                    <div tabindex="500" class="btn btn-primary  btn-file">
                                        <i class="glyphicon glyphicon-folder-open "></i>

                                        @Html.TextBoxFor(model => model.ImageFile, new { type = "file", id = "files" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
